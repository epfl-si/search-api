- name: Search API - ServiceAccount
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: '{{ app_name }}-service-account'
        namespace: '{{ openshift_namespace }}'
      imagePullSecrets:
        - name: '{{ app_name }}-pull-secret'

- name: Search API - Service
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: '{{ app_name }}'
        namespace: '{{ openshift_namespace }}'
        labels:
          app: '{{ app_name }}'
          team: '{{ team }}'
      spec:
        type: ClusterIP
        ports:
          - name: '80'
            port: 80
            targetPort: 5555
        selector:
          app: '{{ app_name }}'

- name: Search API - Deployment
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: '{{ app_name }}'
        namespace: '{{ openshift_namespace }}'
        labels:
          team: '{{ team }}'
          app.kubernetes.io/component: 'backend'
          app.kubernetes.io/managed-by: 'ansible'
          app.kubernetes.io/name: '{{ app_name }}'
          app.kubernetes.io/part-of: 'search'
          app.kubernetes.io/version: '{{ tag }}'
          app.openshift.io/runtime: 'nodejs'
        annotations:
          app.openshift.io/vcs-uri: 'https://github.com/epfl-si/search-api/'
          app.openshift.io/vcs-ref: 'v{{ tag }}'
      spec:
        replicas: 2
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 1
        selector:
          matchLabels:
            app: '{{ app_name }}'
        template:
          metadata:
            labels:
              app: '{{ app_name }}'
          spec:
            serviceAccountName: '{{ app_name }}-service-account'
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        app: '{{ app_name }}'
                    topologyKey: kubernetes.io/hostname
            containers:
              - name: '{{ app_name }}'
                image: '{{ quay_registry }}/{{ app_name }}:{{ tag }}'
                ports:
                  - containerPort: 5555
                  - containerPort: 5556
                env:
                  - name: SEARCH_API_ENABLE_CSE
                    value: '{{ secrets.SEARCH_API_ENABLE_CSE | string }}'
                  - name: SEARCH_API_ENABLE_LDAP
                    value: '{{ secrets.SEARCH_API_ENABLE_LDAP | string }}'
                  - name: SEARCH_API_ENABLE_ADDRESS
                    value: '{{ secrets.SEARCH_API_ENABLE_ADDRESS | string }}'
                  - name: SEARCH_API_ENABLE_UNIT
                    value: '{{ secrets.SEARCH_API_ENABLE_UNIT | string }}'
                  - name: SEARCH_API_ENABLE_GRAPHSEARCH
                    value: '{{ secrets.SEARCH_API_ENABLE_GRAPHSEARCH | string }}'
                  - name: SEARCH_API_SESSION_SECRET
                    valueFrom:
                      secretKeyRef:
                        name: '{{ app_name }}-auth-secrets'
                        key: SEARCH_API_SESSION_SECRET
                  - name: SEARCH_API_SEARCH_URL
                    value: '{{ secrets.SEARCH_API_SEARCH_URL }}'
                  - name: SEARCH_API_X_EPFL_INTERNAL
                    value: '{{ secrets.SEARCH_API_X_EPFL_INTERNAL | string }}'
                  - name: SEARCH_API_CSE_API_KEY
                    valueFrom:
                      secretKeyRef:
                        name: search-api-cse-secrets
                        key: SEARCH_API_CSE_API_KEY
                  - name: SEARCH_API_CSE_CX
                    value: '{{ secrets.SEARCH_API_CSE_CX }}'
                  - name: SEARCH_API_CADIDB_HOST
                    value: '{{ secrets.SEARCH_API_CADIDB_HOST }}'
                  - name: SEARCH_API_CADIDB_PORT
                    value: '{{ secrets.SEARCH_API_CADIDB_PORT }}'
                  - name: SEARCH_API_CADIDB_DATABASE
                    value: '{{ secrets.SEARCH_API_CADIDB_DATABASE }}'
                  - name: SEARCH_API_CADIDB_USER
                    valueFrom:
                      secretKeyRef:
                        name: search-api-cadidb-secrets
                        key: SEARCH_API_CADIDB_USER
                  - name: SEARCH_API_CADIDB_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: search-api-cadidb-secrets
                        key: SEARCH_API_CADIDB_PASSWORD
                  - name: SEARCH_API_LDAP_URL
                    value: '{{ secrets.SEARCH_API_LDAP_URL }}'
                  - name: SEARCH_API_LDAP_ROOTS_FILTER
                    value: '{{ secrets.SEARCH_API_LDAP_ROOTS_FILTER }}'
                  - name: SEARCH_API_MD_BASE_URL
                    value: '{{ secrets.SEARCH_API_MD_BASE_URL }}'
                  - name: SEARCH_API_MD_USER
                    valueFrom:
                      secretKeyRef:
                        name: search-api-md-secrets
                        key: SEARCH_API_MD_USER
                  - name: SEARCH_API_MD_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: search-api-md-secrets
                        key: SEARCH_API_MD_PASSWORD
                  - name: SEARCH_API_ELASTIC_SEARCH_URL
                    value: '{{ secrets.SEARCH_API_ELASTIC_SEARCH_URL }}'
                  - name: SEARCH_API_ELASTIC_RO_USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: '{{ app_name }}-inside-secrets'
                        key: SEARCH_API_ELASTIC_RO_USERNAME
                  - name: SEARCH_API_ELASTIC_RO_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: '{{ app_name }}-inside-secrets'
                        key: SEARCH_API_ELASTIC_RO_PASSWORD
                resources:
                  limits:
                    memory: 256Mi
                  requests:
                    cpu: 10m
                    memory: 256Mi
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 5555
                  initialDelaySeconds: 2
                  periodSeconds: 15
                  timeoutSeconds: 5
                readinessProbe:
                  httpGet:
                    path: /healthz
                    port: 5555
                  initialDelaySeconds: 2
                  periodSeconds: 15
                  timeoutSeconds: 5
